

# This file was *autogenerated* from the file bm.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
F = GF(_sage_const_2 )
R = PolynomialRing(F, 'D')
D = R.gen(0)

def bm (s : list(F)) :
  C = R(_sage_const_1 )
  B = R(_sage_const_1 )
  x = _sage_const_1 
  L = _sage_const_0 
  b = F(_sage_const_1 )
  n = len(s)
  for N in range(n) :
    d = sum(C[i]*s[N - i] for i in range(L + _sage_const_1 ))
    if d == _sage_const_0  :
      x += _sage_const_1 
    elif _sage_const_2 *L > N :
      C -= (d/b)*D**x*B
      x += _sage_const_1 
    else :
      T = C
      C -= (d/b)*D**x*B
      L = N + _sage_const_1  - L
      B = T
      b = d 
      x = _sage_const_1 

  return L, C


print(bm([_sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_0 , _sage_const_0 ]))

