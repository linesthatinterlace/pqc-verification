// mceliece348864

module synd where

import helper
import params
import gf
import root

synd : [SYS_T_t + 1]gf_t -> [SYS_N_t]gf_t -> [SYS_N_t/8][8] -> [2*SYS_T_t]gf_t
synd f L r = last zss
  where zss = [zero] # [ synd_loop f li (c i) zs | zs <- zss | i <- [0 .. SYS_N_t - 1] | li <- L ]
        c i = (zext (((r@(i/8)) >> (i%8)) && 1))
        
synd_loop : [SYS_T_t + 1]gf_t -> gf_t -> gf_t -> [2*SYS_T_t]gf_t -> [2*SYS_T_t]gf_t
synd_loop f li c in = [ gf_add z (gf_mul e_inv c) | z <- in | e_inv <- e_invs ]
  where e = eval f li
        e_inv_pre = gf_inv (gf_mul e e)
        e_invs = [e_inv_pre] # [ gf_mul e_inv li | e_inv <- e_invs ]

synd_loop' : [SYS_T_t + 1]gf_t -> gf_t -> gf_t -> [2*SYS_T_t]gf_t -> [2*SYS_T_t]gf_t
synd_loop' f li c = zipWith (gf_add) (take e_invs)
  where e = eval f li
        e_inv_pre = gf_mul (gf_inv (gf_mul e e)) c
        e_invs = iterate (\x -> gf_mul x li) e_inv_pre

synd_unfolded : [SYS_T_t + 1]gf_t -> [SYS_N_t]gf_t -> [SYS_N_t] -> [2*SYS_T_t]gf_t
synd_unfolded f L r = last zss
  where zss = [zero] # [ if c then synd_loop_unfolded f li zs else zs | zs <- zss | li <- L | c <- r ]

synd_loop_unfolded : [SYS_T_t + 1]gf_t -> gf_t -> [2*SYS_T_t]gf_t -> [2*SYS_T_t]gf_t
synd_loop_unfolded f li = zipWith (gf_add) (take e_invs)
  where e = eval f li
        e_inv_pre = gf_inv (gf_mul e e)
        e_invs = iterate (\x -> gf_mul x li) e_inv_pre

bitget : [width (SYS_N_t - 1)] -> [SYS_N_t/8][8] -> Bit
property bitget i r = i < SYS_N ==> bit_gf == zext [bit_bit]
  where bit_gf = (zext (((r@(i/8)) >> (i%8)) && 1)) : [16]
        bit_bit = (join (map reverse r)) @ i

bytes_bits : [SYS_N_t/8][8] -> [SYS_N_t]
bytes_bits r = join (map reverse r) 

bits_bytes : [SYS_N_t] -> [SYS_N_t/8][8]
bits_bytes r = map reverse (split r)

banga : [SYS_N_t/8][8] -> Bit
property banga r = join (map reverse r) == [ ((r@(i/8)) >> (i%8)) ! 0 | i <- [0 .. SYS_N_t - 1] ]

bitget_it : [width (SYS_N_t - 1)] -> [SYS_N_t/8][8] -> Bit
property bitget_it i r = i < SYS_N ==> (c == 0x0001) || (c == 0x0000)
  where c = (zext (((r@(i/8)) >> (i%8)) && 1))

// 7m in Yices
property synd_loop_eq f li c in = if c
                                  then synd_loop f li (zext [c]) in == synd_loop_unfolded f li in
                                  else synd_loop f li (zext [c]) in == in

property synd_loop_eqe f li in = synd_loop' f li 0x0000 in == synd_loop f li 0x0000 in

//15m in Yices
property synd_loop_eq' f li c in = (c == 0x0001) || (c == 0x0000) ==>
                                    if c == 0x0001
                                    then synd_loop f li c in == synd_loop_unfolded f li in
                                    else synd_loop f li c in == in

//15m in Yices
property synd_loop_eq'' f li c in = (c == 0x0001) || (c == 0x0000) ==>
  ((c == 0x0001) && (synd_loop f li c in == synd_loop_unfolded f li in)) || ((c == 0x0000) && (synd_loop f li c in == in))


property synd_loop_eq_true f li in = synd_loop f li 0x0001 in == synd_loop_unfolded f li in
property synd_loop_eq_false f li in = synd_loop f li 0x0000 in == in

property synd_eq f L r = synd f L r == synd_unfolded f L (join (map reverse r))